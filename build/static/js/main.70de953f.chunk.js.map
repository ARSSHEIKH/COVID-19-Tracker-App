{"version":3,"sources":["Components/NavBar.js","Components/InfoPanel.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","breakpoints","up","display","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","NavBar","classes","className","AppBar","Toolbar","Typography","variant","InputBase","placeholder","input","inputProps","maxWidth","margin","marginTop","paper","textAlign","text","secondary","wordWrap","FullWidthGrid","data","useState","covidData","setCovidData","useEffect","a","fetch","res","json","console","log","getData","index","Grid","container","Object","keys","map","key","ind","toUpperCase","item","xs","sm","Paper","style","elevation","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRASMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAM,aACJJ,SAAU,GACTF,EAAMO,YAAYC,GAAG,MAAQ,CAC5BC,QAAS,UAGbC,OAAO,aACLC,SAAU,WACVC,aAAcZ,EAAMa,MAAMD,aAC1BE,gBAAiBC,YAAKf,EAAMgB,QAAQC,OAAOC,MAAO,KAClD,UAAW,CACTJ,gBAAiBC,YAAKf,EAAMgB,QAAQC,OAAOC,MAAO,MAEpDC,WAAY,EACZC,MAAO,QACNpB,EAAMO,YAAYC,GAAG,MAAQ,CAC5BW,WAAYnB,EAAMK,QAAQ,GAC1Be,MAAO,SAGXC,WAAY,CACVC,QAAStB,EAAMK,QAAQ,EAAG,GAC1BkB,OAAQ,OACRZ,SAAU,WACVa,cAAe,OACff,QAAS,OACTgB,WAAY,SACZC,eAAgB,UAElBC,UAAW,CACTC,MAAO,WAETC,WAAW,aACTP,QAAStB,EAAMK,QAAQ,EAAG,EAAG,EAAG,GAEhCyB,YAAY,cAAD,OAAgB9B,EAAMK,QAAQ,GAA9B,OACX0B,WAAY/B,EAAMgC,YAAYC,OAAO,SACrCb,MAAO,QACNpB,EAAMO,YAAYC,GAAG,MAAQ,CAC5BY,MAAO,OACP,UAAW,CACTA,MAAO,cAMA,SAASc,IACtB,IAAMC,EAAUrC,IAEhB,OACE,qBAAKsC,UAAWD,EAAQlC,KAAxB,SACE,cAACoC,EAAA,EAAD,CAAQ1B,SAAS,SAAjB,SACE,eAAC2B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYH,UAAWD,EAAQ7B,MAAOkC,QAAQ,KAA9C,8BAGA,sBAAKJ,UAAWD,EAAQzB,OAAxB,UACE,qBAAK0B,UAAWD,EAAQd,WAAxB,SACE,cAAC,IAAD,MAEF,cAACoB,EAAA,EAAD,CACEC,YAAY,eACZP,QAAS,CACPlC,KAAMkC,EAAQR,UACdgB,MAAOR,EAAQN,YAEjBe,WAAY,CAAE,aAAc,sB,qDC9EpC9C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ4C,SAAU,IACVC,OAAQ,SACRC,UAAW,IAEbC,MAAO,CACL1B,QAAStB,EAAMK,QAAQ,GACvB4C,UAAW,SACXrB,MAAO5B,EAAMgB,QAAQkC,KAAKC,UAC1BC,SAAU,iBAIC,SAASC,IAAiB,IAEnCC,EAFkC,EACJC,mBAAS,IADL,mBAC/BC,EAD+B,KACpBC,EADoB,KAGtCC,qBAAU,WAAI,4CACZ,4BAAAC,EAAA,sEACoBC,MAAM,8CAA+C,CACrE,OAAU,MACV,QAAW,CACT,iBAAkB,qDAClB,kBAAmB,kCALzB,cACQC,EADR,gBAQeA,EAAIC,OARnB,OAQER,EARF,OASES,QAAQC,IAAIV,GACZG,EAAaH,EAAK,IAVpB,4CADY,uBAAC,WAAD,wBAaZW,KACC,CAACX,IACJ,IAAMnB,EAAUrC,IACZ8B,EAAQ,QACVsC,EAAQ,EACV,OACE,qBAAK9B,UAAWD,EAAQlC,KAAxB,SACE,cAACkE,EAAA,EAAD,CAAMC,WAAS,EAAC/D,QAAS,EAAzB,SACGgE,OAAOC,KAAKd,GAAWe,KAAI,SAACC,EAAKC,GAChC,KAAGP,GAAS,GAgBZ,OAbAA,IACyB,cAAtBM,EAAIE,cACL9C,EAAQ,aAEoB,cAAtB4C,EAAIE,gBACV9C,EAAQ,WAEe,aAAtB4C,EAAIE,gBACL9C,EAAQ,WAEe,WAAtB4C,EAAIE,gBACL9C,EAAQ,WAGR,cAACuC,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACE,eAACC,EAAA,EAAD,CAAO1C,UAAWD,EAAQa,MAAO+B,MAAO,CAACnD,MAAOA,GAAQoD,UAAW,EAAnE,UAEE,6BAAKR,EAAIE,gBACT,4BAAIlB,EAAUgB,SAJYC,UChD3BQ,MATf,WAEE,OACE,sBAAK7C,UAAU,MAAf,UACE,cAACF,EAAD,IACA,cAAC,EAAD,QCGSgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.70de953f.chunk.js","sourcesContent":["import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function NavBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h7\">\r\n            COVID'19 Tracker\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Searchâ€¦\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 1000,\r\n    margin: '0 auto',\r\n    marginTop: 50\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    wordWrap: 'breakWord'\r\n  },\r\n}));\r\n\r\nexport default function FullWidthGrid() {\r\n  const [covidData, setCovidData] = useState({});\r\n  let data;\r\n  useEffect(()=>{\r\n    async function getData(){\r\n      const res = await fetch(\"https://covid-19-data.p.rapidapi.com/totals\", {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n          \"x-rapidapi-key\": \"008f2c29aamshe451c7d286c4d43p1fc2a8jsna64e71f494d5\",\r\n          \"x-rapidapi-host\": \"covid-19-data.p.rapidapi.com\"\r\n        }\r\n      })\r\n      data = await res.json()\r\n      console.log(data)\r\n      setCovidData(data[0])\r\n    }\r\n    getData()\r\n  }, [data])\r\n  const classes = useStyles();\r\n  let color = \"white\"\r\nlet index = 0;\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        {Object.keys(covidData).map((key, ind) => {\r\n          if(index >= 4){\r\n            return\r\n          }\r\n          index++;\r\n          if(key.toUpperCase() === \"CONFIRMED\"){\r\n            color = \"DodgerBlue\"\r\n          }\r\n          else if(key.toUpperCase() === \"RECOVERED\"){\r\n            color = \"#228B22\"\r\n          }\r\n          if(key.toUpperCase() === \"CRITICAL\"){\r\n            color = \"#FF0000\"\r\n          }\r\n          if(key.toUpperCase() === \"DEATHS\"){\r\n            color = \"#FA8072\"\r\n          }\r\n          return(\r\n            <Grid item xs={6} sm={6} key={ind}>\r\n              <Paper className={classes.paper} style={{color: color}} elevation={3}>\r\n                \r\n                <h3>{key.toUpperCase()}</h3>\r\n                <b>{covidData[key]}</b>\r\n              </Paper>\r\n            </Grid>\r\n          )\r\n        })}\r\n        \r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport NavBar from './Components/NavBar.js'\nimport InfoPanel from './Components/InfoPanel.js'\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <NavBar/>\n      <InfoPanel/>\n    </div>\n    )\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}