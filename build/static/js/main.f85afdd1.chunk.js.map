{"version":3,"sources":["Components/NavBar.js","Components/GlobalStats.js","firebase-config.js","Components/AllCountries.js","Components/SearchBar.js","Components/InfoPanel.js","Components/FootNav.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textDecoration","color","breakpoints","up","display","NavBar","classes","className","AppBar","position","style","background","Toolbar","Typography","variant","href","src","width","height","maxWidth","margin","marginTop","paper","padding","textAlign","palette","text","secondary","wordWrap","GlobalStats","currentScreen","data","useState","covidData","setCovidData","useEffect","a","fetch","res","json","getCovidData","index","Grid","container","Object","keys","map","key","ind","toUpperCase","item","xs","sm","Paper","elevation","firebaseConfig","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","checker","AllCountries","totalData","setTotalData","resq","resApi","res2","getCountry","country","user","ip","loc","temp","Math","floor","random","database","ref","set","GetAPi","res1","totalCases","covid19Stats","getData","confirmed","recovered","deaths","province","sleep","delay","Promise","resolve","setTimeout","SearchBar","props","React","open","setOpen","options","setOptions","textChange","setText","loading","length","active","response","countries","onSubmit","event","preventDefault","document","getElementById","value","Autocomplete","id","onOpen","onClose","getOptionSelected","option","name","getOptionLabel","renderInput","params","TextField","InputProps","endAdornment","Fragment","CircularProgress","size","placeholder","FullWidthGrid","bottom","left","right","FootNav","screenConfig","square","Tabs","onChange","newValue","indicatorColor","textColor","aria-label","Tab","icon","label","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f85afdd1.chunk.js","sourcesContent":["import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    textDecoration: 'none',\r\n    color: '#B22222',\r\n    flexGrow: 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function NavBar() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{background:'#012'}}>\r\n        <Toolbar>\r\n          \r\n          <Typography className={classes.title} variant=\"h6\">\r\n            <a href=\"./\" className={classes.title}>\r\n              <img src=\"https://themefire.pro/wp-content/uploads/2020/03/03.png\" width=\"50\" height=\"50\" style={{display:'inline-block'}}/>\r\n              COVID'19 Tracker</a>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 1000,\r\n    margin: '0 auto',\r\n    marginTop: 50\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    wordWrap: 'breakWord'\r\n  },\r\n}));\r\n\r\nexport default function GlobalStats({currentScreen}) {\r\n  const [covidData, setCovidData] = useState({});\r\n  let data;\r\n  \r\n  useEffect(()=>{\r\n    async function getCovidData(){\r\n      const res = await fetch(\"https://covid-19-data.p.rapidapi.com/totals\", {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n          \"x-rapidapi-key\": \"008f2c29aamshe451c7d286c4d43p1fc2a8jsna64e71f494d5\",\r\n          \"x-rapidapi-host\": \"covid-19-data.p.rapidapi.com\"\r\n        }\r\n      })\r\n      data = await res.json()\r\n      setCovidData(data[0])\r\n    }\r\n    getCovidData()\r\n  }, [data])\r\n  const classes = useStyles();\r\n  let color = \"white\"\r\n  let index = 0;\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        {Object.keys(covidData).map((key, ind) => {\r\n          if(index >= 4){\r\n            return\r\n          }\r\n          index++;\r\n          if(key.toUpperCase() === \"CONFIRMED\"){\r\n            color = \"DodgerBlue\"\r\n          }\r\n          else if(key.toUpperCase() === \"RECOVERED\"){\r\n            color = \"#228B22\"\r\n          }\r\n          if(key.toUpperCase() === \"CRITICAL\"){\r\n            color = \"#FF0000\"\r\n          }\r\n          if(key.toUpperCase() === \"DEATHS\"){\r\n            color = \"#FA8072\"\r\n          }\r\n          return(\r\n            <Grid item xs={6} sm={6} key={ind}>\r\n              <Paper className={classes.paper} style={{color: color}} elevation={3}>\r\n                \r\n                <h3>{key.toUpperCase()}</h3>\r\n                <b>{covidData[key]}</b>\r\n              </Paper>\r\n            </Grid>\r\n          )\r\n        })}\r\n        \r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBpAxHYRQLQDa4mEMIjOBeSmi_8ELPnh38\",\r\n    authDomain: \"userdataforcovid19.firebaseapp.com\",\r\n    projectId: \"userdataforcovid19\",\r\n    storageBucket: \"userdataforcovid19.appspot.com\",\r\n    messagingSenderId: \"584697706575\",\r\n    appId: \"1:584697706575:web:05d86e085e0d50ac63123a\",\r\n    measurementId: \"G-83Y7TZ2TZP\"\r\n\r\n};\r\nexport const firebaseConfig = firebase.initializeApp(config);","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { firebaseConfig } from '../firebase-config'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 1000,\r\n    margin: '0 auto',\r\n    marginTop: 50,\r\n    height: 1000\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    wordWrap: 'breakWord'\r\n  },\r\n}));\r\nlet checker = 'incomplete';\r\nexport default function AllCountries({ currentScreen, text }) {\r\n  const [covidData, setCovidData] = useState({});\r\n  const [totalData, setTotalData] = useState({});\r\n\r\n  let data;\r\n\r\n  async function GetAPi() {\r\n    const resq = await fetch('https://api.ipify.org?format=json')\r\n    const resApi = await resq.json()\r\n\r\n    const res2 = await fetch('https://extreme-ip-lookup.com/json/')\r\n    const getCountry = await res2.json()\r\n    text = getCountry.country;\r\n    \r\n    if(checker === 'incomplete'){\r\n      const user ={\r\n        ip : resApi.ip,\r\n        loc : getCountry\r\n      }\r\n      let temp = Math.floor(Math.random() * 1000000); \r\n      firebaseConfig.database().ref('/userid' + (temp)).set(user)\r\n      checker='complete'\r\n    }\r\n    else{\r\n      return\r\n    }\r\n  }\r\n  GetAPi();\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const res1 = await fetch(\"https://covid-19-coronavirus-statistics.p.rapidapi.com/v1/total?country=\" + text, {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n          \"x-rapidapi-key\": \"008f2c29aamshe451c7d286c4d43p1fc2a8jsna64e71f494d5\",\r\n          \"x-rapidapi-host\": \"covid-19-coronavirus-statistics.p.rapidapi.com\"\r\n        }\r\n      })\r\n      const totalCases = await res1.json()\r\n      setTotalData(totalCases.data);\r\n\r\n      const res = await fetch(\"https://covid-19-coronavirus-statistics.p.rapidapi.com/v1/stats?country=\" + text, {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n          \"x-rapidapi-key\": \"008f2c29aamshe451c7d286c4d43p1fc2a8jsna64e71f494d5\",\r\n          \"x-rapidapi-host\": \"covid-19-coronavirus-statistics.p.rapidapi.com\"\r\n        }\r\n      })\r\n      data = await res.json()\r\n      setCovidData(data.data.covid19Stats);\r\n      // firebaseConfig.database().ref('user/'+userIpAdd+'/'+ind + \"/\").set(databaseValues)\r\n\r\n      // console.log(firebaseConfig);\r\n    }\r\n    getData()\r\n  }, [text])\r\n\r\n  const classes = useStyles();\r\n  let color = \"white\"\r\n  return (\r\n    <div className={classes.root}>\r\n      <h2 style={{ textAlign: 'center', color: '#fff' }}>{text}</h2>\r\n\r\n      <Grid container spacing={3}>\r\n        {Object.keys(totalData).map((key, ind) => {\r\n\r\n          if (key.toUpperCase() === \"CONFIRMED\") {\r\n            color = \"DodgerBlue\"\r\n          }\r\n          else if (key.toUpperCase() === \"RECOVERED\") {\r\n            color = \"#228B22\"\r\n          }\r\n          if (key.toUpperCase() === \"DEATHS\") {\r\n            color = \"#FA8072\"\r\n          }\r\n          if (ind > 2) {\r\n            return\r\n          }\r\n          return (\r\n            <Grid item xs={6} sm={6} key={ind}>\r\n              <Paper className={classes.paper} style={{ color: color }} elevation={3}>\r\n                <h3>{key.toUpperCase()}</h3>\r\n                <p>{totalData[key]}</p>\r\n              </Paper>\r\n            </Grid>\r\n          )\r\n        })}\r\n      </Grid>\r\n      <hr />\r\n      <h2 style={{ textAlign: 'center', color: '#fff' }}>State Stats</h2>\r\n      <Grid container spacing={3}>\r\n        {Object.keys(covidData).map((key, ind) => {\r\n\r\n          if (key === 'city' && key === 'keyId' && key === 'lastUpdate') {\r\n            return\r\n          }\r\n          if (covidData[key].confirmed === \"confirmed\") {\r\n            color = \"DodgerBlue\"\r\n          }\r\n          else if (covidData[key].recovered === \"recovered\") {\r\n            color = \"#228B22\"\r\n          }\r\n          if (covidData[key].deaths === \"deaths\") {\r\n            color = \"#FA8072\"\r\n          }\r\n          return (\r\n            <Grid item xs={12} sm={4} key={ind}>\r\n              <Paper className={classes.paper} elevation={3}>\r\n                <h3>{covidData[key].province}</h3>\r\n                <Grid container spacing={0}>\r\n                  <Paper className={classes.paper} elevation={3} style={{ background: '#D3D3D3' }}>\r\n                    <h4 style={{ color: \"DodgerBlue\" }} > confirmed </h4>\r\n                    <p> {covidData[key].confirmed}</p>\r\n                  </Paper>\r\n                  <Paper className={classes.paper} elevation={3} style={{ background: '#D3D3D3' }}>\r\n                    <h4 style={{ color: \"#228B22\" }} > recovered </h4>\r\n                    <p> {covidData[key].confirmed}</p>\r\n                  </Paper>\r\n                  <Paper className={classes.paper} elevation={3} style={{ background: '#D3D3D3' }}>\r\n                    <h4 style={{ color: \"#FA8072\" }} > deaths</h4>\r\n                    <p> {covidData[key].confirmed}</p>\r\n                  </Paper></Grid>\r\n                {/* <p style={{ color: \"DodgerBlue\" }} > confirmed : {covidData[key].confirmed}</p>\r\n                <p style={{ color: \"#228B22\" }}> recovered : {covidData[key].recovered} </p>\r\n                <p style={{ color: \"#FA8072\" }} > deaths : {covidData[key].deaths}</p> */}\r\n\r\n              </Paper>\r\n            </Grid>\r\n          )\r\n\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","// *https://www.registers.service.gov.uk/registers/country/use-the-api*\r\nimport fetch from 'cross-fetch';\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AllCountries from './AllCountries'\r\nfunction sleep(delay = 0) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\nexport default function SearchBar(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [options, setOptions] = React.useState([]);\r\n  const [textChange, setText] = React.useState(\"Pakistan\");\r\n  const loading = open && options.length === 0;\r\n\r\n\r\n  React.useEffect(() => {\r\n    let active = true;\r\n\r\n    if (!loading) {\r\n      return undefined;\r\n    }\r\n    (async () => {\r\n      const response = await fetch('https://country.register.gov.uk/records.json?page-size=5000');\r\n      await sleep(1e3); // For demo purposes.\r\n      const countries = await response.json();\r\n\r\n      if (active) {\r\n        setOptions(Object.keys(countries).map((key) => countries[key].item[0]));\r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [loading]);\r\n\r\n  React.useEffect(() => {\r\n    if (!open) {\r\n      setOptions([]);\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <>\r\n    <form onSubmit={(event)=>{\r\n      event.preventDefault();\r\n      setText(document.getElementById('asynchronous-demo').value);\r\n      return <AllCountries text={textChange}/>\r\n    }}>\r\n      <Autocomplete\r\n        id=\"asynchronous-demo\"\r\n        style={{marginTop: 20}}\r\n        open={open}\r\n        onOpen={() => {\r\n          setOpen(true);\r\n        }}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        getOptionSelected={(option, value) => option.name === value.name}\r\n        getOptionLabel={(option) => option.name}\r\n        options={options}\r\n        loading={loading}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            id=\"textField\"\r\n            style={{background:\"#fffffe\"}}\r\n            {...params}\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              ...params.InputProps,\r\n              endAdornment: (\r\n                <React.Fragment>\r\n                  {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                </React.Fragment>\r\n              ),\r\n            }}\r\n            placeholder=\"Search ...\"\r\n          />\r\n        )}\r\n      />\r\n       {/* <IconButton aria-label=\"Search\" style={{border: '1px solid'}} color=\"primary\">\r\n        <Search />\r\n      </IconButton> */}\r\n      <AllCountries text={textChange}/>\r\n    </form>\r\n      </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport GlobalStats from './GlobalStats.js'\r\nimport AllCountries from './AllCountries.js'\r\nimport SearchBar from './SearchBar.js'\r\n\r\nexport default function FullWidthGrid({currentScreen}) {\r\n  if(currentScreen === 0)\r\n    return <GlobalStats/>\r\n  else  if(currentScreen === 1)\r\n    return <SearchBar/>\r\n  else \r\n    return <AllCountries/>\r\n  \r\n}\r\n","import React, { Link } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Map from '@material-ui/icons/Map';\r\nimport Flag from '@material-ui/icons/Flag';\r\nimport GraphicEq from '@material-ui/icons/GraphicEq';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0\r\n  },\r\n});\r\nexport default function FootNav({ screenConfig }) {\r\n  const classes = useStyles();\r\n  const handleChange = (event, newValue) => {\r\n    screenConfig[1](newValue);\r\n  };\r\n\r\n  return (\r\n    <Paper square className={classes.root}>\r\n      <Tabs\r\n        value={screenConfig[0]}\r\n        onChange={handleChange}\r\n        variant=\"fullWidth\"\r\n        indicatorColor=\"secondary\"\r\n        textColor=\"secondary\"\r\n        aria-label=\"icon label tabs example\"\r\n      >\r\n        <Tab icon={<Map />} label=\"Global Stats\" />\r\n        <Tab icon={<Flag />} label=\"Country Stats\" />\r\n        <Tab icon={<GraphicEq />} label=\"Graphs\" />\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, {useState} from 'react';\r\nimport NavBar from './Components/NavBar.js'\r\nimport InfoPanel from './Components/InfoPanel.js'\r\nimport FootNav from './Components/FootNav.js'\r\n\r\nfunction App() {\r\n  const screenConfig = useState(0)\r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar/>\r\n      <InfoPanel currentScreen={screenConfig[0]}/>\r\n      <FootNav screenConfig={screenConfig} id=\"navTabs\"/>\r\n    </div>\r\n    )\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}